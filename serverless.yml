# serverless.yaml
org: ${file(./.env.json):ORG}
service: photogram-api-FastAPI
package:
    individually: true
provider:
    name: aws
    runtime: python3.10
    memorySize: 128
    timeout: 30
    #  apiGateway:
    #    apiKeys:
    #      - value: ${file(./.env.json):API_KEY}
    #        description: API key for Photogram API
#    iam:
#        role: arn:aws:iam::145871297803:role/LambdaExecutionRole
plugins:
    - serverless-python-requirements
#    - serverless-domain-manager
#    - serverless-certificate-creator
#custom:
#    domains:
#        # References to 'prod' stage
#        prod:
#            domainName: photogram-api.${file(./.env.json):DOMAIN}
#            certificateName: photogram-api.${file(./.env.json):DOMAIN}
#    # Amazon Certificate Manager
#    customCertificate:
#        hostedZoneNames: ${file(./.env.json):DOMAIN}. # don't forget the dot on the end - is required by Route53
#        certificateName: photogram-api.${file(./.env.json):DOMAIN}
#        region: us-east-1
#
#    # Route53
#    customDomain:
#        domainName: photogram-api.${file(./.env.json):DOMAIN}
#        certificateName: photogram-api.${file(./.env.json):DOMAIN}
#        createRoute53Record: true
#        autoDomain: true
functions:
    app:
        package:
            patterns:
                - "app/**"
                - "!requirements.txt"
                - "!package.json"
                - "!package-lock.json"
                - "!.serverless/**"
                - "!venv/**"
                - "!node_modules/**"
                - "!.env*"
        handler: config.handler
        environment:
            MONGO_URI: ${file(./.env.json):MONGO_URI}
            SENTRY_DSN: ${file(./.env.json):SENTRY_DSN}
        events:
            - http:
                  method: get
                  path: /
                  cors: true
            - http:
                  method: any
                  path: /{proxy+}
                  cors: true
#          private: true
